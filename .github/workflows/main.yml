name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]  # Ensure npm compatibility
        python-version: [3.9]  # Use the appropriate Python version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  backend-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest  # Install PyTest for backend testing
          pip install -r requirements.txt

      - name: Run backend tests
        run: pytest backend/tests/

  frontend-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install npm dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: npm run test  # Use Jest for frontend tests

  build:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Build frontend
        run: |
          cd frontend
          npm run dev  # Build frontend using npm

      - name: Package backend
        run: |
          cd backend
          python manage.py collectstatic --noinput  # Static file collection for Django
          # Add other build steps if necessary

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Update to your region

      - name: Deploy backend to AWS Elastic Beanstalk or EC2
        run: |
          # Add deployment scripts to deploy the Django backend
          # Example for Elastic Beanstalk:
          eb deploy --staged

      - name: Deploy frontend to S3 (if applicable)
        run: |
          aws s3 sync frontend/build s3://your-s3-bucket-name --delete
